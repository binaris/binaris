---
- test: Test help output
  steps:
    -   in: bn --help
        out: |-
              Binaris command line interface

              Usage: bn <command> [options]

              Commands:
                bn create <runtime> <function> [options]  Create a function from template
                bn deploy <function> [options]            Deploys a function to the cloud
                bn remove <function> [options]            Remove a previously deployed function
                bn invoke <function> [options]            Invoke a Binaris function
                bn logs <function> [options]              Print the logs of a function
                bn login                                  Login to your Binaris account using an API key

              Options:
                --version   Show version number  [boolean]
                --path, -p  Use directory dir. "create" will create this directory if needed.  [string]
                --help, -h  Show help  [boolean]*

- test: Test logs help output (good-path)
  steps:
    -   in: bn logs --help
        out: |-
              Usage: bn logs <function> [options]

              Positionals:
                function  Function name  [string] [required]

              Options:
                --version    Show version number  [boolean]
                --path, -p   Use directory dir. "create" will create this directory if needed.  [string]
                --help, -h   Show help  [boolean]
                --tail, -t   Outputs logs in "tail -f" fashion (ignores --since flag)  [boolean]
                --since, -s  Outputs logs after the given ISO timestamp  [string]

              Examples:
                  // retrieve all logs
                  bn logs foo

                  // tail all logs
                  bn logs foo --tail

                  // ISO
                  bn logs foo --since 2018-03-09T22:12:21.861Z

                  // unix
                  bn logs foo --since 1520816105798

                  // offset format
                  bn logs foo --since 3d
                  bn logs foo --since 13hours
                  bn logs foo --since 9s*

- test: Test login (good-path)
  cleanup:
    - bn remove momentousgiants
  steps:
    -   in: bn create node8 momentousgiants
        out: |-
            Created function * in /home/dockeruser/test
              (use "bn deploy momentousgiants" to deploy the function)
    -   in: echo "$BINARIS_API_KEY" | bn login
        out: |-
            Please enter your Binaris API key to deploy and invoke functions.
            If you don't have a key, head over to https://binaris.com to request one
            *? API Key: *
            *Authentication Succeeded*
              (use "bn create" to create a template function in your current directory)
    -   in: bn deploy momentousgiants
        out: |-
            Deployed function to *
              (use "bn invoke momentousgiants" to invoke the function)

- test: Test create (good-path)
  steps:
    -   in: bn create node8 snowmanolympics
        out: |-
            Created function * in /home/dockeruser/test
              (use "bn deploy *" to deploy the function)
    -   in: bn create node8 purplecannon -p /home/dockeruser/test/purplecannon
        out: |-
            Created function purplecannon in /home/dockeruser/test/purplecannon
              (use "bn deploy -p /home/dockeruser/test/purplecannon purplecannon" to deploy the function)

- test: Test deploy (good-path)
  cleanup:
    - bn remove drybeef
  steps:
    -   in: bn create node8 drybeef
        out: |-
            Created function * in /home/dockeruser/test
              (use "bn deploy drybeef" to deploy the function)
    -   in: bn deploy drybeef
        out: |-
            Deployed function to *
              (use "bn invoke drybeef" to invoke the function)
    -   in: bn deploy drybeef
        out: |-
            Deployed function to *
              (use "bn invoke drybeef" to invoke the function)

- test: Test invoke (good-path)
  setup:
    - |-
      echo '{"name": "unguessable"}' > invoke.json
  cleanup:
    - bn remove extrasmallaunt
  steps:
    -   in: bn create node8 extrasmallaunt
        out: |-
            Created function * in /home/dockeruser/test
              (use "bn deploy extrasmallaunt" to deploy the function)
    -   in: bn deploy extrasmallaunt
        out: |-
            Deployed function to *
              (use "bn invoke extrasmallaunt" to invoke the function)
    -   in: sleep 8
    -   in: bn invoke extrasmallaunt
        out: |-
            "Hello World!"
    -   in: |-
            bn invoke extrasmallaunt -d '{"name": "unguessable"}'
        out: |-
            "Hello unguessable!"
    -   in: bn invoke extrasmallaunt -j invoke.json
        out: |-
            "Hello unguessable!"

- test: Test logs (good-path)
  setup:
    - export FUNC_NAME=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 32 | head -n 1)
    - bn create node8 $FUNC_NAME
    - sed -i '2 a \  console.log(`Hello ${name}!`);' function.js
  cleanup:
    - bn remove $FUNC_NAME
  steps:
    -   in: bn deploy $FUNC_NAME
        out: |-
            Deployed function to *
              (use "bn invoke *" to invoke the function)
    -   in: sleep 8
    -   in: bn invoke $FUNC_NAME
        out: |-
            "Hello World!"
    -   in: sleep 5
    -   in: bn logs $FUNC_NAME
        out: |-
          [201*-*-*T*:*:*Z] Hello World!
          [201*-*-*T*:*:*Z] Function invocation took * us
    -   in: |-
          bn invoke $FUNC_NAME -d '{"name": "again"}'
        out: |-
            "Hello again!"
    -   in: sleep 5
    -   in: bn logs $FUNC_NAME
        out: |-
          [201*-*-*T*:*:*Z] Hello World!
          [201*-*-*T*:*:*Z] Function invocation took * us
          [201*-*-*T*:*:*Z] Hello again!
          [201*-*-*T*:*:*Z] Function invocation took * us
    -   in: sleep 15
    -   in: |-
          bn invoke $FUNC_NAME -d '{"name": "for the last time"}'
        out: |-
            "Hello for the last time!"
    -   in: sleep 8
    -   in: bn logs $FUNC_NAME --since 10s
        out: |-
          [201*-*-*T*:*:*Z] Hello for the last time!
          [201*-*-*T*:*:*Z] Function invocation took * us
    -   in: bn logs $FUNC_NAME --since 40sec
        out: |-
          [201*-*-*T*:*:*Z] Hello again!
          [201*-*-*T*:*:*Z] Function invocation took * us
          [201*-*-*T*:*:*Z] Hello for the last time!
          [201*-*-*T*:*:*Z] Function invocation took * us

- test: 'Test {PY_VERSION} E2E (good-path)'
  vars:
    PY_VERSION:
      - python2
      - pypy2
  setup:
    - export FUNC_NAME=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 32 | head -n 1)
    - 'bn create {PY_VERSION} $FUNC_NAME'
    - sed -i '2 a \    print "Hello {}!".format(name)' function.py
  cleanup:
    - bn remove $FUNC_NAME
  steps:
    -   in: bn deploy $FUNC_NAME
        out: |-
            Deployed function to *
              (use "bn invoke *" to invoke the function)
    -   in: sleep 8
    -   in: |-
          bn invoke $FUNC_NAME -d '{"name": "Binaris"}'
        out: |-
            "Hello Binaris!"
    -   in: sleep 5
    -   in: bn logs $FUNC_NAME
        out: |-
          [201*-*-*T*:*:*Z] Hello Binaris!
          [201*-*-*T*:*:*Z] Function invocation took * us

- test: Test deploy invoke remove cycle commands (good-path)
  steps:
    -   in: bn create node8 gulliblezebra
        out: |-
            Created function * in /home/dockeruser/test
              (use "bn deploy gulliblezebra" to deploy the function)
    -   in: bn deploy gulliblezebra
        out: |-
            Deployed function to *
              (use "bn invoke gulliblezebra" to invoke the function)
    -   in: sleep 8
    -   in: bn invoke gulliblezebra
        out: |-
            "Hello World!"
    -   in: bn remove gulliblezebra
        out: |-
            Removed function *
              (use "bn deploy gulliblezebra" to re-deploy the function)

- test: Test login (bad-path)
  steps:
    -   in: bn create node8 stormysummer
    -   in: echo "9239239" | bn login
        err: Invalid API key
        exit: 1

- test: Test create (bad-path)
  steps:
    -   in: bn create node8 a*b*c*
        err: Invalid characters in function name a*b*c*. Use only letters and digits
        exit: 1
    -   in: bn create node8 a_b%c#d@e+
        err: Invalid characters in function name a_b%c#d@e+. Use only letters and digits
        exit: 1
    -   in: bn create node8 a=b~c,d.
        err: Invalid characters in function name a=b~c,d.. Use only letters and digits
        exit: 1
    -   in: bn create node8 a:b?c!d-
        err: Invalid characters in function name a:b?c!d-. Use only letters and digits
        exit: 1
    -   in: bn create node8 tooooooooooooooooooooooooooooooooooooooooooooooolongggggggggggggggggggggggggggggggggggggggggggggggggggggggggg
        err: Function names cannot be longer than 58 characters.
        exit: 1
    -   in: bn create
        err: "*Not enough non-option arguments: got 0, need at least 2"
        exit: 1
    -   in: bn create node8
        err: "*Not enough non-option arguments: got 1, need at least 2"
        exit: 1
    -   in: bn create abcd
        err: "*Not enough non-option arguments: got 1, need at least 2"
        exit: 1

- test: Test invoke (bad-path)
  steps:
    -   in: bn create node8 quarrelsometest -p /home/dockeruser/test/alloftheoptions
    -   in: bn invoke quarrelsometest -p /home/dockeruser/test/alloftheoptions -j myFile.json -d data
        err: Invoke flags --json(-j) and --data(-d) are mutually exclusive
        exit: 1
    -   in: bn invoke quarrelsometest -p /home/dockeruser/test/alloftheoptions/ -j myFile.json
        err: "ENOENT: no such file or directory, open 'myFile.json'"
        exit: 1

- test: Test remove (bad-path)
  steps:
    -   in: bn create node8 dispensabledrop
    -   in: bn remove dispensabledrop
        err: No such function
        exit: 1
    -   in: bn deploy dispensabledrop
    -   in: bn remove dispensabledrop
    -   in: sleep 2
    -   in: bn remove dispensabledrop
        err: No such function
        exit: 1
    -   in: bn remove
        err: "*Not enough non-option arguments: got 0, need at least 1"
        exit: 1

- test: Test logs (bad-path)
  steps:
    -   in: bn create node8 endlessclue
    -   in: bn logs endlessclue --since h23sdh2
        err: |-
             Invalid time format "h23sdh2"
        exit: 1
    -   in: bn logs endlessclue --since 231213daysf
        err: |-
             Invalid offset format, unknown unit "daysf"
        exit: 1

- test: Invalid name in binaris.yml  (bad-path)
  setup:
    - bn create node8 pickypumpkin
    # replace line 2 of binaris.yml(function name) with a bad function name
    - sed -i '2 c \  inv@a-d:' binaris.yml
  steps:
    - in: bn deploy "inv@a-d"
      err: Invalid characters in function name inv@a-d. Use only letters and digits
      exit: 1

- test: Unknown command (bad-path)
  steps:
    -   in: bn alwaysbad
        err: "*Unknown command: 'alwaysbad'"
        exit: 1

- test: No permission
  setup:
    - mkdir /home/dockeruser/test/securedir
    - echo binaris | sudo  -S chown root:root /home/dockeruser/test/securedir
    - echo binaris | sudo  -S chmod 700 /home/dockeruser/test/securedir
  steps:
    -   in: bn create node8 orangehero -p /home/dockeruser/test/securedir
        err: "EACCES: permission denied, unlink '/home/dockeruser/test/securedir/function.js'"
        exit: 1

# Disabled until the switch is made to yargs
#
# - test: Superfluous output(bad-path)
#   steps:
#     -   in: bn create init init
#         err: Argument "*" is not a valid input to *
#         exit: 1
#     -   in: bn create sadmksad
#         err: Argument "sadmksad" is not a valid input to create
#         exit: 1
#     -   in: bn deploy init
#         err: Argument "init" is not a valid input to deploy
#         exit: 1
#     -   in: bn logs notlogs
#         err: Argument "notlogs" is not a valid input to logs
#         exit: 1

- test: No such path (bad-path)
  steps:
    -   in: bn deploy livelyhall -p /home/dockeruser/test/bogus/comeon/really/hello.js
        err: "ENOENT: no such file or directory, open '/home/dockeruser/test/bogus/comeon/really/hello.js/binaris.yml'"
        exit: 1
    -   in: bn invoke livelyhall -p /home/dockeruser/test/never/will/exist
        err: "ENOENT: no such file or directory, open '/home/dockeruser/test/never/will/exist/binaris.yml'"
        exit: 1
    -   in: bn remove livelyhall -p /home/dockeruser/test/hocus/pocus/fairy
        err: "ENOENT: no such file or directory, open '/home/dockeruser/test/hocus/pocus/fairy/binaris.yml'"
        exit: 1
    -   in: bn logs livelyhall -p /home/dockeruser/test/what/ifitdidnt/exist
        err: "ENOENT: no such file or directory, open '/home/dockeruser/test/what/ifitdidnt/exist/binaris.yml'"
        exit: 1

- test: No API key or conf file (bad-path)
  setup:
    - unset BINARIS_API_KEY
  steps:
    -   in: bn create node8 handsomelycalendar
    -   in: bn deploy handsomelycalendar
        err: Binaris conf file could not be read and BINARIS_API_KEY is undefined, please use "bn login"
        exit: 1
