- test: Test Py2 input
  steps:
    -   in: export BASE_ARGS="-H X-Binaris-Api-Key:${BINARIS_API_KEY}"
    -   in: export TEST_FUNCTION="https://${BINARIS_INVOKE_ENDPOINT}/v2/run/${BINARIS_ACCOUNT_ID}/returnPy2Input"
    -   in: bn create python2 returnPy2Input
    -   in: |-
          cat > function.py << EOL
          def handler(input, ctx):
            return { 
              'inputType': type(input).__name__,
              'input': input,
            }
          EOL
    -   in: bn deploy returnPy2Input
    -   in: curl -s ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '{"input": {}, "inputType": "dict"}'
    -   in: curl -s --data '{"' ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '{"input": null, "inputType": "NoneType"}'
    -   in: curl -s --data '{}' ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '{"input": {}, "inputType": "dict"}'
    -   in: curl -s --data '{"foo":"bar","yet":123}' ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '{"input": {"foo": "bar", "yet": 123}, "inputType": "dict"}'
    -   in: curl -s --data '["foo","bar"]' ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '{"input": ["foo", "bar"], "inputType": "list"}'
    -   in: bn remove returnPy2Input

- test: Test Py2 method 
  steps:
    -   in: export BASE_ARGS="-H X-Binaris-Api-Key:${BINARIS_API_KEY}"
    -   in: export TEST_FUNCTION="https://${BINARIS_INVOKE_ENDPOINT}/v2/run/${BINARIS_ACCOUNT_ID}/returnPy2Method"
    -   in: bn create python2 returnPy2Method
    -   in: |-
          cat > function.py << EOL
          def handler(body, ctx):
            return ctx.request.method
          EOL
    -   in: bn deploy returnPy2Method
    -   in: curl -s -X GET ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"GET"'
    -   in: curl -s -X POST ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"POST"'
    -   in: curl -s -X PUT ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"PUT"'
    -   in: curl -s -X DELETE ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"DELETE"'
    -   in: curl -s -X OPTIONS ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"OPTIONS"'
    -   in: curl -s -X PATCH ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"PATCH"'
    -   in: bn remove returnPy2Method

- test: Test Py2 data input
  steps:
    -   in: export BASE_ARGS="-H X-Binaris-Api-Key:${BINARIS_API_KEY}"
    -   in: export TEST_FUNCTION="https://${BINARIS_INVOKE_ENDPOINT}/v2/run/${BINARIS_ACCOUNT_ID}/returnPy2ReqBody"
    -   in: bn create python2 returnPy2ReqBody
    -   in: |-
          cat > function.py << EOL
          def handler(input, ctx):
            return ctx.request.body
          EOL
    -   in: bn deploy returnPy2ReqBody
    -   in: curl -s ${BASE_ARGS} "${TEST_FUNCTION}"
        out: ''
    -   in: curl -s --data '{' ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"{"'
    -   in: curl -s --data '{}' ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"{}"'
    -   in: curl -s --data ' ' ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '" "'
    -   in: curl -s --data-urlencode ' ' ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"%20"'
    -   in: echo | curl -s --data-binary @- ${BASE_ARGS} "${TEST_FUNCTION}"
        out: '"\n"'
    -   in: bn remove returnPy2ReqBody
